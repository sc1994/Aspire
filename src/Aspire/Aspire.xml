<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aspire</name>
    </assembly>
    <members>
        <member name="T:Aspire.Application">
            <inheritdoc />
        </member>
        <member name="M:Aspire.Application.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.Application"/> class.
            </summary>
        </member>
        <member name="P:Aspire.Application.Mapper">
            <summary>
            Gets mapper.
            </summary>
        </member>
        <member name="M:Aspire.Application.Failure(System.String[])">
            <summary>
            失败.
            </summary>
            <param name="messages">错误编码.</param>
            <returns>Friendly Exception.</returns>
        </member>
        <member name="M:Aspire.Application.Failure(Aspire.ResponseCode,System.String[])">
            <summary>
            Failure.
            </summary>
            <param name="code">错误编码.</param>
            <param name="messages">消息.</param>
            <returns>Return T.</returns>
        </member>
        <member name="M:Aspire.Application.Failure(System.Int32,System.String,System.String[])">
            <summary>
            Failure.
            </summary>
            <param name="code">错误编码.</param>
            <param name="title">Title.</param>
            <param name="messages">消息.</param>
            <returns>Return T.</returns>
        </member>
        <member name="M:Aspire.Application.MapTo``1(System.Object)">
            <summary>
            Map To.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="source">Source.</param>
            <returns>Return T.</returns>
        </member>
        <member name="M:Aspire.Application.MapTo``2(``0)">
            <summary>
            Map To.
            </summary>
            <typeparam name="TSource">Source.</typeparam>
            <typeparam name="TTarget">Target.</typeparam>
            <param name="source">Input Source.</param>
            <returns>Return Target.</returns>
        </member>
        <member name="T:Aspire.CrudApplication`1">
            <inheritdoc cref="T:Aspire.ICrudApplication`6"/>
        </member>
        <member name="T:Aspire.CrudApplication`2">
            <inheritdoc cref="T:Aspire.ICrudApplication`6"/>
        </member>
        <member name="T:Aspire.CrudApplication`3">
            <inheritdoc cref="T:Aspire.ICrudApplication`6"/>
        </member>
        <member name="T:Aspire.CrudApplication`4">
            <inheritdoc cref="T:Aspire.ICrudApplication`6"/>
        </member>
        <member name="T:Aspire.CrudApplication`5">
            <inheritdoc cref="T:Aspire.ICrudApplication`6"/>
        </member>
        <member name="T:Aspire.CrudApplication`6">
            <inheritdoc cref="T:Aspire.ICrudApplication`6"/>
        </member>
        <member name="M:Aspire.CrudApplication`6.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.CrudApplication`6"/> class.
            </summary>
        </member>
        <member name="P:Aspire.CrudApplication`6.CurrentRepository">
            <summary>
            Gets 当前服务仓储.
            </summary>
        </member>
        <member name="M:Aspire.CrudApplication`6.CreateAsync(`4)">
            <summary>
            Create.
            </summary>
            <param name="input">Input Dto.</param>
            <returns>Output Dto.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.DeleteAsync(`1)">
            <summary>
            Delete.
            </summary>
            <param name="id">id.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.UpdateAsync(`5)">
            <summary>
            Update.
            </summary>
            <param name="input">Input.</param>
            <returns>Output.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.GetAsync(`1)">
            <summary>
            Get.
            </summary>
            <param name="id">id.</param>
            <returns>Output.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.PagingAsync(`2)">
            <summary>
            Paging.
            </summary>
            <param name="input">Input.</param>
            <returns>Page Output.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.FilterPage(`2)">
            <summary>
            Filter Page.
            </summary>
            <param name="input">Input.</param>
            <returns>Queryable.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.MapToDto(`0)">
            <summary>
            映射到 数据传输对象.
            </summary>
            <param name="entity">Audit Entity.</param>
            <returns>Output Dto.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.MapToDto``1(`0)">
            <summary>
            映射到 数据传输对象.
            </summary>
            <typeparam name="TTargetDto">Target Dto.</typeparam>
            <param name="entity">Entity.</param>
            <returns>Target.</returns>
        </member>
        <member name="M:Aspire.CrudApplication`6.MapToEntity``1(``0)">
            <summary>
            映射到 实体.
            </summary>
            <typeparam name="TSourceDto">Source Dto.</typeparam>
            <param name="dto">Dto.</param>
            <returns>Audit Entity.</returns>
        </member>
        <member name="T:Aspire.IDto`1">
            <summary>
            数据传输对象.
            </summary>
            <typeparam name="TPrimaryKey">主键.</typeparam>
        </member>
        <member name="P:Aspire.IDto`1.Id">
            <summary>
            Gets or sets 主键.
            </summary>
        </member>
        <member name="T:Aspire.IPageInputDto">
            <summary>
            页输入.
            </summary>
        </member>
        <member name="P:Aspire.IPageInputDto.PageIndex">
            <summary>
            Gets or sets 页 索引.
            </summary>
        </member>
        <member name="P:Aspire.IPageInputDto.PageSize">
            <summary>
            Gets or sets 页 大小.
            </summary>
        </member>
        <member name="T:Aspire.PagedResultDto`1">
            <summary>
            分页结果.
            </summary>
            <typeparam name="TItem">item.</typeparam>
        </member>
        <member name="M:Aspire.PagedResultDto`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.PagedResultDto`1"/> class.
            </summary>
            <param name="items">items.</param>
            <param name="totalCount">total count.</param>
        </member>
        <member name="P:Aspire.PagedResultDto`1.Items">
            <summary>
            Gets items.
            </summary>
        </member>
        <member name="P:Aspire.PagedResultDto`1.TotalCount">
            <summary>
            Gets total count.
            </summary>
        </member>
        <member name="T:Aspire.PageInputDto">
            <inheritdoc />
        </member>
        <member name="P:Aspire.PageInputDto.PageIndex">
            <inheritdoc />
        </member>
        <member name="P:Aspire.PageInputDto.PageSize">
            <inheritdoc />
        </member>
        <member name="T:Aspire.IApplication">
            <summary>
            应用
            作为控制器的最基层.
            </summary>
        </member>
        <member name="T:Aspire.ICrudApplication`1">
            <inheritdoc />
        </member>
        <member name="T:Aspire.ICrudApplication`2">
            <inheritdoc />
        </member>
        <member name="T:Aspire.ICrudApplication`3">
            <inheritdoc />
        </member>
        <member name="T:Aspire.ICrudApplication`4">
            <inheritdoc />
        </member>
        <member name="T:Aspire.ICrudApplication`5">
            <inheritdoc />
        </member>
        <member name="T:Aspire.ICrudApplication`6">
            <summary>
            CRUD 服务.
            </summary>
            <typeparam name="TAuditEntity">数据库审计实体.</typeparam>
            <typeparam name="TPrimaryKey">实体主键.</typeparam>
            <typeparam name="TPageInputDto">数据传输对象 分页输入.</typeparam>
            <typeparam name="TOutputDto">数据传输 输出对象.</typeparam>
            <typeparam name="TCreateDto">数据传输 创建对象.</typeparam>
            <typeparam name="TUpdateDto">数据传输 更新对象.</typeparam>
        </member>
        <member name="M:Aspire.ICrudApplication`6.CreateAsync(`4)">
            <summary>
            Create.
            </summary>
            <param name="input">Input Dto.</param>
            <returns>Output Dto.</returns>
        </member>
        <member name="M:Aspire.ICrudApplication`6.DeleteAsync(`1)">
            <summary>
            Delete.
            </summary>
            <param name="id">id.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.ICrudApplication`6.UpdateAsync(`5)">
            <summary>
            Update.
            </summary>
            <param name="input">Input.</param>
            <returns>Output.</returns>
        </member>
        <member name="M:Aspire.ICrudApplication`6.GetAsync(`1)">
            <summary>
            Get.
            </summary>
            <param name="id">id.</param>
            <returns>Output.</returns>
        </member>
        <member name="M:Aspire.ICrudApplication`6.PagingAsync(`2)">
            <summary>
            Paging.
            </summary>
            <param name="input">Input.</param>
            <returns>Page Output.</returns>
        </member>
        <member name="T:Aspire.Identities.ICurrentUserDto">
            <summary>
            Current User Dto.
            </summary>
        </member>
        <member name="T:Aspire.Identities.IIdentityLoginDto">
            <summary>
            Login Dto.
            </summary>
        </member>
        <member name="P:Aspire.Identities.IIdentityLoginDto.Account">
            <summary>
            Gets or sets 用户Id.
            </summary>
        </member>
        <member name="P:Aspire.Identities.IIdentityLoginDto.Password">
            <summary>
            Gets or sets 密码.
            </summary>
        </member>
        <member name="T:Aspire.Identities.IIdentityTokenDto">
            <summary>
            Identity Token Dto.
            </summary>
        </member>
        <member name="P:Aspire.Identities.IIdentityTokenDto.Token">
            <summary>
            Gets or sets Token.
            </summary>
        </member>
        <member name="P:Aspire.Identities.IIdentityTokenDto.ExpiryTime">
            <summary>
            Gets or sets 到期时间.
            </summary>
        </member>
        <member name="P:Aspire.Identities.IIdentityTokenDto.Ttl">
            <summary>
            Gets or sets Ttl.
            </summary>
        </member>
        <member name="P:Aspire.Identities.IIdentityTokenDto.TokenHeaderName">
            <summary>
            Gets or sets Token Header Name.
            </summary>
        </member>
        <member name="T:Aspire.Identities.IIdentityAppService`3">
            <summary>
            身份服务.
            </summary>
            <typeparam name="TLoginDto">Login Dto.</typeparam>
            <typeparam name="TIdentityTokenDto">Identity Token Dto.</typeparam>
            <typeparam name="TCurrentUserDto">Current User Dto.</typeparam>
        </member>
        <member name="M:Aspire.Identities.IIdentityAppService`3.LoginAsync(`0)">
            <summary>
            Login.
            </summary>
            <param name="input">Login Dto.</param>
            <returns>Identity Token Dto.</returns>
        </member>
        <member name="M:Aspire.Identities.IIdentityAppService`3.GetCurrentUserAsync">
            <summary>
            Get Current User.
            </summary>
            <returns>Current User Dto.</returns>
        </member>
        <member name="M:Aspire.Identities.IIdentityAppService`3.LogoutAsync">
            <summary>
            Logout.
            </summary>
            <returns>Boolean.</returns>
        </member>
        <member name="T:Aspire.Identities.ICurrentUser">
            <summary>
            当前登入用户.
            </summary>
        </member>
        <member name="T:Aspire.Identities.IIdentityOptionsSetup">
            <summary>
            身份 启动项.
            </summary>
        </member>
        <member name="M:Aspire.Identities.IIdentityOptionsSetup.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加身份.
            </summary>
            <param name="service">Service Collection.</param>
        </member>
        <member name="T:Aspire.SystemLogs.ISystemLogCommonDto">
            <summary>
            系统日志 通用实体.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.ApiMethod">
            <summary>
            Gets or sets api method.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.ApiRouter">
            <summary>
            Gets or sets api router.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.Title">
            <summary>
            Gets or sets title.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.TraceId">
            <summary>
            Gets or sets traceId.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.Filter1">
            <summary>
            Gets or sets 过滤1.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.Filter2">
            <summary>
            Gets or sets 过滤2.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.ClientAddress">
            <summary>
            Gets or sets 远端 地址.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.ServerAddress">
            <summary>
            Gets or sets 服务端 地址.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogCommonDto.Level">
            <summary>
            Gets or sets 等级.
            </summary>
        </member>
        <member name="T:Aspire.SystemLogs.ISystemLogDetailOutputDto`1">
            <summary>
            System Log Detail Output Dto.
            </summary>
            <typeparam name="TPrimaryKey">Id.</typeparam>
        </member>
        <member name="T:Aspire.SystemLogs.ISystemLogFilterInputDto">
            <summary>
            日志 查询过滤器.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogFilterInputDto.CreatedAtRange">
            <summary>
            Gets or sets 创建时间 范围.
            </summary>
        </member>
        <member name="T:Aspire.SystemLogs.ISystemLogFilterOutputDto`1">
            <summary>
            系统日志 过滤 输出.
            </summary>
            <typeparam name="TPrimaryKey">Primary Key.</typeparam>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogFilterOutputDto`1.CreatedAt">
            <summary>
            Gets or sets 创建时间.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogFilterOutputDto`1.CreatedAtTicks">
            <summary>
            Gets created Ticks.
            </summary>
            <value>
            Created Ticks.
            </value>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogFilterOutputDto`1.Message">
            <summary>
            Gets or sets Messages.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.ISystemLogFilterOutputDto`1.Id">
            <summary>
            Gets or sets Id.
            </summary>
        </member>
        <member name="T:Aspire.SystemLogs.SystemLogSelectItemsDto">
            <summary>
            选项集合.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.ApiMethod">
            <summary>
            Gets or sets API路由.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.ApiRouter">
            <summary>
            Gets or sets API方法.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.Filter1">
            <summary>
            Gets or sets 过滤1.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.Filter2">
            <summary>
            Gets or sets 过滤2.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.ClientAddress">
            <summary>
            Gets or sets 客户端地址.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.ServerAddress">
            <summary>
            Gets or sets 服务端地址.
            </summary>
        </member>
        <member name="P:Aspire.SystemLogs.SystemLogSelectItemsDto.Title">
            <summary>
            Gets or sets Title.
            </summary>
        </member>
        <member name="T:Aspire.SystemLogs.ISystemLogAppService`4">
            <summary>
            System Log.
            </summary>
            <typeparam name="TPrimaryKey">Primary Key.</typeparam>
            <typeparam name="TFilterInputDto">Filter Input Dto.</typeparam>
            <typeparam name="TFilterOutputDto">Filter Output Dto.</typeparam>
            <typeparam name="TDetailOutputDto">Detail Output Dto.</typeparam>
        </member>
        <member name="M:Aspire.SystemLogs.ISystemLogAppService`4.FilterAsync(`1)">
            <summary>
            filter.
            </summary>
            <param name="filterInput">Filter Input.</param>
            <returns>分页过滤输出.</returns>
        </member>
        <member name="M:Aspire.SystemLogs.ISystemLogAppService`4.GetAsync(`0)">
            <summary>
            Get Detail.
            </summary>
            <param name="id">Primary Key.</param>
            <returns>详情输出.</returns>
        </member>
        <member name="M:Aspire.SystemLogs.ISystemLogAppService`4.GetSelectItems">
            <summary>
            获取选择项.
            </summary>
            <returns>选择项集合.</returns>
        </member>
        <member name="M:Aspire.SystemLogs.ISystemLogAppService`4.DeleteAllSelectItems">
            <summary>
            删除全部选择项.
            </summary>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.SystemLogs.ISystemLogAppService`4.GetPageConfig">
            <summary>
            Get Page Config.
            </summary>
            <returns>Config.</returns>
        </member>
        <member name="T:Aspire.Users.IUserCreateDto">
            <inheritdoc cref="T:Aspire.Identities.ICurrentUser"/>
            <inheritdoc cref="T:Aspire.Users.IUserPassword"/>
        </member>
        <member name="T:Aspire.Users.IUserOutputDto`1">
            <inheritdoc cref="T:Aspire.Identities.ICurrentUser"/>
        </member>
        <member name="T:Aspire.Users.IUserPageInputDto">
            <inheritdoc cref="T:Aspire.Users.IUserAccount"/>
        </member>
        <member name="T:Aspire.Users.IUserUpdateDto`1">
            <inheritdoc cref="T:Aspire.Users.IUserBase"/>
            <inheritdoc cref="T:Aspire.IDto`1"/>
        </member>
        <member name="T:Aspire.Users.IUserAppService`6">
            <summary>
            User Manage AppService.
            </summary>
            <typeparam name="TUserEntity">User Entity.</typeparam>
            <typeparam name="TPrimaryKey">User PrimaryKey.</typeparam>
            <typeparam name="TUserPageInputDto">User Page InputDto.</typeparam>
            <typeparam name="TUserOutputDto">User OutputDto.</typeparam>
            <typeparam name="TUserCreateDto">User CreateDto.</typeparam>
            <typeparam name="TUserUpdateDto">User UpdateDto.</typeparam>
        </member>
        <member name="T:Aspire.Users.IUser">
            <summary>
            用户 实体.
            </summary>
        </member>
        <member name="T:Aspire.Users.IUser`1">
            <summary>
            用户.
            </summary>
            <typeparam name="TPrimaryKey">主键.</typeparam>
        </member>
        <member name="T:Aspire.Users.IUserAccount">
            <summary>
            用户账号.
            </summary>
        </member>
        <member name="P:Aspire.Users.IUserAccount.Account">
            <summary>
            Gets or sets 用户Id.
            </summary>
        </member>
        <member name="T:Aspire.Users.IUserBase">
            <summary>
            用户基础.
            </summary>
        </member>
        <member name="P:Aspire.Users.IUserBase.Name">
            <summary>
            Gets or sets 姓名.
            </summary>
        </member>
        <member name="P:Aspire.Users.IUserBase.Roles">
            <summary>
            Gets or sets 角色.
            </summary>
        </member>
        <member name="P:Aspire.Users.IUserBase.Icon">
            <summary>
            Gets or sets Icon.
            </summary>
        </member>
        <member name="T:Aspire.Users.IUserManage`1">
            <summary>
            User Manage.
            </summary>
            <typeparam name="TUser">User.</typeparam>
        </member>
        <member name="T:Aspire.Users.IUserManage`2">
            <summary>
            User Manage.
            </summary>
            <typeparam name="TUser">User.</typeparam>
            <typeparam name="TPrimaryKey">Primary Key.</typeparam>
        </member>
        <member name="M:Aspire.Users.IUserManage`2.GetByAccount(System.String)">
            <summary>
            根据账号获取用户.
            </summary>
            <param name="account">Account.</param>
            <returns>User Entity.</returns>
        </member>
        <member name="M:Aspire.Users.IUserManage`2.GetByAccountAndPassword(System.String,System.String)">
            <summary>
            根据用户名和密码获取.
            </summary>
            <param name="account">Account.</param>
            <param name="password">Password.</param>
            <returns>User Entity.</returns>
        </member>
        <member name="M:Aspire.Users.IUserManage`2.EncryptPassword(System.String)">
            <summary>
            Encrypt Password.
            </summary>
            <param name="password">Password.</param>
            <returns>加密后密码.</returns>
        </member>
        <member name="T:Aspire.Users.IUserPassword">
            <summary>
            用户密码.
            </summary>
        </member>
        <member name="P:Aspire.Users.IUserPassword.Password">
            <summary>
            Gets or sets 密码.
            </summary>
        </member>
        <member name="T:Aspire.IAuditEntity">
            <inheritdoc />
        </member>
        <member name="M:Aspire.IAuditEntity.InitId">
            <summary>
            初始化GUID.
            </summary>
        </member>
        <member name="T:Aspire.IAuditEntity`1">
            <summary>
            审计实体.
            </summary>
            <typeparam name="TPrimaryKey">主键.</typeparam>
        </member>
        <member name="P:Aspire.IAuditEntity`1.CreatedAt">
            <summary>
            Gets or sets 创建时间.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.CreatedUserName">
            <summary>
            Gets or sets 创建人.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.CreatedUserAccount">
            <summary>
            Gets or sets 创建人id.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.UpdatedAt">
            <summary>
            Gets or sets 更新时间.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.UpdatedUserName">
            <summary>
            Gets or sets 更新人.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.UpdatedUserAccount">
            <summary>
            Gets or sets 更新人id.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.Deleted">
            <summary>
            Gets or sets a value indicating whether gets or sets 是否删除
            使用仓储进行筛选无需筛选这个字段.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.DeletedAt">
            <summary>
            Gets or sets 删除时间.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.DeletedUserName">
            <summary>
            Gets or sets 删除人.
            </summary>
        </member>
        <member name="P:Aspire.IAuditEntity`1.DeletedUserAccount">
            <summary>
            Gets or sets 删除人id.
            </summary>
        </member>
        <member name="T:Aspire.IAuditRepository`1">
            <summary>
            审计仓储 （主键为GUID）.
            </summary>
            <typeparam name="TAuditEntity">Audit Entity.</typeparam>
        </member>
        <member name="T:Aspire.IAuditRepository`2">
            <summary>
            审计仓储.
            </summary>
            <typeparam name="TAuditEntity">Audit Entity.</typeparam>
            <typeparam name="TPrimaryKey">Primary Key.</typeparam>
        </member>
        <member name="M:Aspire.IAuditRepository`2.InsertAsync(`0)">
            <summary>
            Insert.
            </summary>
            <param name="entity">Audit Entity.</param>
            <returns>成功与否.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.InsertThenEntityAsync(`0)">
            <summary>
            Insert Then Entity.
            </summary>
            <param name="entity">Audit Entity.</param>
            <returns>Entity.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.InsertBatchAsync(`0[])">
            <summary>
            Insert Batch.
            </summary>
            <param name="entities">Audit Entity Array.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.InsertBatchAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Insert Batch.
            </summary>
            <param name="entities">Audit Entity Array.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.DeleteAsync(`1)">
            <summary>
            Delete.
            </summary>
            <param name="primaryKey">Primary Key.</param>
            <returns>成功与否.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.DeleteBatchAsync(`1[])">
            <summary>
            Delete Batch.
            </summary>
            <param name="primaryKeys">Primary Key Array.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.DeleteBatchAsync(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Delete Batch.
            </summary>
            <param name="primaryKeys">Primary Key Array.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.DeleteBatchAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Delete Batch.
            </summary>
            <param name="filter">过滤条件.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.UpdateAsync(`0)">
            <summary>
            Update.
            </summary>
            <param name="newEntity">New Entity.</param>
            <returns>成功与否.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.UpdateBatchAsync(`0[])">
            <summary>
            Update Batch.
            </summary>
            <param name="newEntities">New Entitiy Array.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.UpdateBatchAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update Batch.
            </summary>
            <param name="newEntities">New Entitiy Array.</param>
            <returns>影响行数.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.GetAsync(`1)">
            <summary>
            Get.
            </summary>
            <param name="primaryKey">Primary Key.</param>
            <returns>数据库内容.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.GetBatchAsync(`1[])">
            <summary>
            Get.
            </summary>
            <param name="primaryKeys">Primary Key Array.</param>
            <returns>数据库内容.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.GetBatchAsync(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Get.
            </summary>
            <param name="primaryKeys">Primary Key Array.</param>
            <returns>数据库内容.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.GetBatchAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get.
            </summary>
            <param name="filter">Filter.</param>
            <returns>数据库内容.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.GetBatchAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int64)">
            <summary>
            Get.
            </summary>
            <param name="filter">Filter.</param>
            <param name="limit">Limit.</param>
            <returns>数据库内容.</returns>
        </member>
        <member name="M:Aspire.IAuditRepository`2.PagingAsync(System.Object,Aspire.PageInputDto)">
            <summary>
            Get.
            </summary>
            <param name="queryable">可查询对象 比如 ef 中的 IQueryable，freeSql 中的 ISelect.</param>
            <param name="dto">Page Input.</param>
            <returns>数据库内容.</returns>
        </member>
        <member name="T:Aspire.IAuditRepositoryOptionsSetup">
            <summary>
            审计仓储启动选项.
            </summary>
        </member>
        <member name="M:Aspire.IAuditRepositoryOptionsSetup.AddAuditRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加审计仓储.
            </summary>
            <param name="services">服务集.</param>
        </member>
        <member name="T:Aspire.IAspireCacheClient">
            <summary>
            Cache.
            </summary>
        </member>
        <member name="M:Aspire.IAspireCacheClient.DeleteKey(System.String)">
            <summary>
            Delete Key.
            </summary>
            <param name="key">Key.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.ContainsKey(System.String)">
            <summary>
            Contains Key.
            </summary>
            <param name="key">Key.</param>
            <returns>Is Exist.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.GetString(System.String)">
            <summary>
            Get String.
            </summary>
            <param name="key">Key.</param>
            <returns>Type Object.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.SetString(System.String,System.String,System.Int32)">
            <summary>
            Set String.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <param name="ttl">TTL.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.GetString``1(System.String)">
            <summary>
            Get String.
            </summary>
            <typeparam name="T">Json Deserialize Type.</typeparam>
            <param name="key">Key.</param>
            <returns>Type Object.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.SetString``1(System.String,``0,System.Int32)">
            <summary>
            Set String.
            </summary>
            <typeparam name="T">Json Serialize Type.</typeparam>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <param name="ttl">TTL.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.AddSetMembers(System.String,System.String[])">
            <summary>
            Add Set Members.
            </summary>
            <param name="key">Key.</param>
            <param name="values">Value Array.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.AddSetMembers``1(System.String,``0[])">
            <summary>
            Add Set Members.
            </summary>
            <typeparam name="T">Json Serialize Type.</typeparam>
            <param name="key">Key.</param>
            <param name="values">Value Array.</param>
            <returns>Is Success.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.GetSetAllMembers(System.String)">
            <summary>
            Get Set All Members.
            </summary>
            <param name="key">Key.</param>
            <returns>Member Array.</returns>
        </member>
        <member name="M:Aspire.IAspireCacheClient.GetSetAllMembers``1(System.String)">
            <summary>
            Get Set All Members.
            </summary>
            <typeparam name="T">Json Deserialize Type.</typeparam>
            <param name="key">Key.</param>
            <returns>Member Array.</returns>
        </member>
        <member name="T:Aspire.ICacheClientOptionsSetup">
            <summary>
            Aspire Redis Options Setup.
            </summary>
        </member>
        <member name="M:Aspire.ICacheClientOptionsSetup.AddCacheClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Cache Client.
            </summary>
            <param name="service">Service Collection.</param>
        </member>
        <member name="T:Aspire.IDomainService">
            <summary>
            Domain Service Interface.
            </summary>
        </member>
        <member name="T:Aspire.Loggers.ILoggerConfigure">
            <summary>
            Serilog Elastic Search Configure.
            </summary>
        </member>
        <member name="M:Aspire.Loggers.ILoggerConfigure.UseLogger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            User Logger.
            </summary>
            <param name="app">IApplicationBuilder.</param>
            <returns>IApplicationBuilder .</returns>
        </member>
        <member name="T:Aspire.Loggers.ILoggerOptionsSetup">
            <summary>
            logger 启动配置.
            </summary>
        </member>
        <member name="M:Aspire.Loggers.ILoggerOptionsSetup.AddLogger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add Logger.
            </summary>
            <param name="services">Service Collection.</param>
            <param name="configuration">Configuration.</param>
        </member>
        <member name="T:Aspire.Loggers.ILogWriter">
            <summary>
            日志 写入.
            </summary>
        </member>
        <member name="M:Aspire.Loggers.ILogWriter.Information(System.String,System.String,System.String,System.String)">
            <summary>
            write info.
            </summary>
            <param name="title">title.</param>
            <param name="message">message.</param>
            <param name="filter1">filter1.</param>
            <param name="filter2">filter2.</param>
        </member>
        <member name="M:Aspire.Loggers.ILogWriter.Information(System.String,System.Object,System.String,System.String)">
            <summary>
            write info.
            </summary>
            <param name="title">title.</param>
            <param name="message">message.</param>
            <param name="filter1">filter1.</param>
            <param name="filter2">filter2.</param>
        </member>
        <member name="M:Aspire.Loggers.ILogWriter.Warning(System.String,System.String,System.String,System.String)">
            <summary>
            write warn.
            </summary>
            <param name="title">title.</param>
            <param name="message">message.</param>
            <param name="filter1">filter1.</param>
            <param name="filter2">filter2.</param>
        </member>
        <member name="M:Aspire.Loggers.ILogWriter.Warning(System.String,System.Object,System.String,System.String)">
            <summary>
            write warn.
            </summary>
            <param name="title">title.</param>
            <param name="message">message.</param>
            <param name="filter1">filter1.</param>
            <param name="filter2">filter2.</param>
        </member>
        <member name="M:Aspire.Loggers.ILogWriter.Error(System.Exception,System.String,System.String,System.String)">
            <summary>
            write error.
            </summary>
            <param name="ex">exception.</param>
            <param name="message">message.</param>
            <param name="filter1">filter1.</param>
            <param name="filter2">filter2.</param>
        </member>
        <member name="M:Aspire.Loggers.ILogWriter.Error(System.Exception,System.Object,System.String,System.String)">
            <summary>
            write error.
            </summary>
            <param name="ex">exception.</param>
            <param name="message">message.</param>
            <param name="filter1">filter1.</param>
            <param name="filter2">filter2.</param>
        </member>
        <member name="T:Aspire.Loggers.LogWriterHelper">
            <summary>
            日志写入帮助.
            </summary>
        </member>
        <member name="M:Aspire.Loggers.LogWriterHelper.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Aspire.Identities.ICurrentUser)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.Loggers.LogWriterHelper"/> class.
            </summary>
            <param name="httpContextAccessor">httpContextAccessor.</param>
            <param name="currentUser">Current User.</param>
        </member>
        <member name="M:Aspire.Loggers.LogWriterHelper.GetPartialStandardParams">
            <summary>
            获取部分标准参数.
            </summary>
            <returns>
            <para>Api Method.</para>
            <para>Api Router.</para>
            <para>Trace Id.</para>
            <para>Client Address.</para>
            <para>Server Address.</para>
            </returns>
        </member>
        <member name="T:Aspire.AppConst">
            <summary>
            App Const.
            </summary>
        </member>
        <member name="F:Aspire.AppConst.CurrentUserHttpItemKey">
            <summary>
            Current User Http Item Key.
            </summary>
        </member>
        <member name="T:Aspire.Roles">
            <summary>
            角色.
            </summary>
        </member>
        <member name="F:Aspire.Roles.Admin">
            <summary>
            admin.
            </summary>
        </member>
        <member name="F:Aspire.Roles.User">
            <summary>
            user.
            </summary>
        </member>
        <member name="T:Aspire.LogLevelEnum">
            <summary>
            日志等级.
            </summary>
        </member>
        <member name="F:Aspire.LogLevelEnum.Information">
            <summary>
            info.
            </summary>
        </member>
        <member name="F:Aspire.LogLevelEnum.Warning">
            <summary>
            warn.
            </summary>
        </member>
        <member name="F:Aspire.LogLevelEnum.Error">
            <summary>
            error.
            </summary>
        </member>
        <member name="T:Aspire.ResponseCode">
            <summary>
            响应编码.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.Ok">
            <summary>
            成功.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.Unauthorized">
            <summary>
            未授权.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.UnauthorizedRoles">
            <summary>
            未授权的角色.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.UnauthorizedAccountOrPassword">
            <summary>
            未授权的账号或者密码.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.AuthorizeExpired">
            <summary>
            鉴权过期.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.AuthorizeInvalid">
            <summary>
            授权无效.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.InternalServerError">
            <summary>
            内部服务异常.
            </summary>
        </member>
        <member name="F:Aspire.ResponseCode.InternalServerDatabaseError">
            <summary>
            内部服务数据库异常.
            </summary>
        </member>
        <member name="T:Aspire.SequentialGuidType">
            <summary>
            Sequential Guid Type.
            <para>This code is taken from jhtodd/SequentialGuid https://github.com/jhtodd/SequentialGuid/blob/master/SequentialGuid/Classes/SequentialGuid.cs.</para>
            </summary>
        </member>
        <member name="F:Aspire.SequentialGuidType.SequentialAsString">
            <summary>
            SequentialAsString.
            </summary>
        </member>
        <member name="F:Aspire.SequentialGuidType.SequentialAsBinary">
            <summary>
            SequentialAsBinary.
            </summary>
        </member>
        <member name="F:Aspire.SequentialGuidType.SequentialAtEnd">
            <summary>
            SequentialAtEnd.
            </summary>
        </member>
        <member name="T:Aspire.FriendlyException">
            <summary>
            友好异常.
            </summary>
        </member>
        <member name="M:Aspire.FriendlyException.#ctor(System.Int32,System.Diagnostics.EnhancedStackTrace,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.FriendlyException"/> class.
            实例化 异常.
            </summary>
            <param name="code">Code.</param>
            <param name="stackTrace">Stack Trace.</param>
            <param name="title">Title.</param>
            <param name="messages">Messages.</param>
        </member>
        <member name="P:Aspire.FriendlyException.Title">
            <summary>
            Gets Title.
            </summary>
        </member>
        <member name="P:Aspire.FriendlyException.Code">
            <summary>
            Gets code.
            </summary>
        </member>
        <member name="P:Aspire.FriendlyException.StackTrace">
            <summary>
            Gets 堆栈.
            </summary>
        </member>
        <member name="P:Aspire.FriendlyException.Messages">
            <summary>
            Gets 消息.
            </summary>
        </member>
        <member name="P:Aspire.FriendlyException.Result">
            <summary>
            Gets or sets Result.
            </summary>
        </member>
        <member name="T:Aspire.FriendlyThrowException">
            <summary>
            友好的异常抛出.
            </summary>
        </member>
        <member name="M:Aspire.FriendlyThrowException.ThrowException(System.String[])">
            <summary>
            抛出异常.
            </summary>
            <param name="messages">Messages.</param>
            <returns>Friendly Exception.</returns>
        </member>
        <member name="M:Aspire.FriendlyThrowException.ThrowException(System.Int32,System.String,System.String[])">
            <summary>
            抛出异常.
            </summary>
            <param name="code">Code.</param>
            <param name="title">Title.</param>
            <param name="messages">Messages.</param>
            <returns>Friendly Exception.</returns>
        </member>
        <member name="M:Aspire.FriendlyThrowException.ThrowException(Aspire.ResponseCode,System.String[])">
            <summary>
            抛出异常.
            </summary>
            <param name="code">Code.</param>
            <param name="messages">Messages.</param>
            <returns>Friendly Exception.</returns>
        </member>
        <member name="T:Aspire.IgnoreActionLogAttribute">
            <summary>
            响应 日志 忽略.
            </summary>
        </member>
        <member name="T:Aspire.ResponseFormatAttribute">
            <summary>
            响应 格式.
            </summary>
        </member>
        <member name="M:Aspire.ResponseFormatAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            在控制器完成后检验控制器结果.
            </summary>
            <param name="context">Context.</param>
        </member>
        <member name="T:Aspire.GlobalResponse">
            <summary>
            Global Response.
            </summary>
        </member>
        <member name="M:Aspire.GlobalResponse.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.GlobalResponse"/> class.
            </summary>
            <param name="code"><see cref="T:Aspire.ResponseCode" /> 可自定义code.</param>
        </member>
        <member name="M:Aspire.GlobalResponse.#ctor(Aspire.ResponseCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.GlobalResponse"/> class.
            </summary>
            <param name="code">Code.</param>
        </member>
        <member name="M:Aspire.GlobalResponse.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.GlobalResponse"/> class.
            </summary>
            <param name="code"><see cref="T:Aspire.ResponseCode" /> 可自定义code.</param>
            <param name="result">Result.</param>
        </member>
        <member name="M:Aspire.GlobalResponse.#ctor(Aspire.ResponseCode,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.GlobalResponse"/> class.
            </summary>
            <param name="code">Code.</param>
            <param name="result">Result.</param>
        </member>
        <member name="M:Aspire.GlobalResponse.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.GlobalResponse"/> class.
            </summary>
            <param name="ex">Friendly Exception.</param>
        </member>
        <member name="M:Aspire.GlobalResponse.#ctor(Aspire.FriendlyException)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.GlobalResponse"/> class.
            </summary>
            <param name="ex">Friendly Exception.</param>
        </member>
        <member name="P:Aspire.GlobalResponse.Code">
            <summary>
            Gets Code <see cref="T:Aspire.ResponseCode" /> 可自定义code.
            </summary>
        </member>
        <member name="P:Aspire.GlobalResponse.Messages">
            <summary>
            Gets or sets Messages 用于页面弹出友好异常消息内容.
            </summary>
        </member>
        <member name="P:Aspire.GlobalResponse.Title">
            <summary>
            Gets or sets Title 用于页面弹出友好异常消息标题.
            </summary>
        </member>
        <member name="P:Aspire.GlobalResponse.Result">
            <summary>
            Gets Result.
            </summary>
        </member>
        <member name="P:Aspire.GlobalResponse.StackTrace">
            <summary>
            Gets or sets Stack Trace 不会通过 Json 发送给网络.
            </summary>
        </member>
        <member name="P:Aspire.GlobalResponse.StackTraceText">
            <summary>
            Gets Stack Trace Text 默认处理了一些堆栈的内容, 减少无用信息.
            </summary>
        </member>
        <member name="M:Aspire.GlobalResponse.WriteToHttpResponseAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Async Write To Http Response.
            </summary>
            <param name="context">Http Context.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Aspire.HttpContextServiceProviderProxy">
            <summary>
            Http Context Service Provider Proxy.
            </summary>
        </member>
        <member name="M:Aspire.HttpContextServiceProviderProxy.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.HttpContextServiceProviderProxy"/> class.
            </summary>
            <param name="contextAccessor">Http Context Accessor.</param>
        </member>
        <member name="M:Aspire.HttpContextServiceProviderProxy.GetService``1">
            <inheritdoc/>
        </member>
        <member name="M:Aspire.HttpContextServiceProviderProxy.GetServices``1">
            <inheritdoc/>
        </member>
        <member name="M:Aspire.HttpContextServiceProviderProxy.GetService(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Aspire.HttpContextServiceProviderProxy.GetServices(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Aspire.IServiceProviderProxy">
            <summary>
            di 服务提供 代理.
            </summary>
        </member>
        <member name="M:Aspire.IServiceProviderProxy.GetService``1">
            <summary>
            Get Services.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:Aspire.IServiceProviderProxy.GetServices``1">
            <summary>
            Get Services.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:Aspire.IServiceProviderProxy.GetService(System.Type)">
            <summary>
            Get Services.
            </summary>
            <param name="type">Type.</param>
            <returns>Type Instance.</returns>
        </member>
        <member name="M:Aspire.IServiceProviderProxy.GetServices(System.Type)">
            <summary>
            Get Services.
            </summary>
            <param name="type">Type.</param>
            <returns>Type Instance.</returns>
        </member>
        <member name="T:Aspire.ServiceLocator">
            <summary>
            服务定位.
            </summary>
        </member>
        <member name="P:Aspire.ServiceLocator.ServiceProvider">
            <summary>
            Gets DI 服务提供 代理 实例.
            </summary>
        </member>
        <member name="M:Aspire.ServiceLocator.Initialize(Aspire.IServiceProviderProxy)">
            <summary>
            Initialize.
            </summary>
            <param name="proxy">Proxy.</param>
        </member>
        <member name="T:Aspire.AspireSetupOptions">
            <summary>
            aspire 启动 选项.
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.NewtonsoftJsonOptionsSetup">
            <summary>
            Gets or sets NewtonsoftJson 启动选项.
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.DynamicWebApiOptionsSetup">
            <summary>
            Gets or sets 动态 api 启动选项.
            <para>详情参考：https://github.com/pda-team/Panda.DynamicWebApi/blob/master/README_zh-CN.md.</para>
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.SwaggerGenOptionsSetup">
            <summary>
            Gets or sets swagger 启动选项.
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.MapperOptions">
            <summary>
            Gets or sets mapper 设置项.
            <para>比如 new AutoMapperOptionsSetup().</para>
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.AuditRepositoryOptions">
            <summary>
            Gets or sets 审计仓储 设置项.
            <para>比如 new FreeSqlAuditRepositoryOptionsSetup().</para>
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.Configuration">
            <summary>
            Gets or sets 配置.
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.LoggerOptionsSetup">
            <summary>
            Gets or sets 日志 设置项.
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.CacheClientOptionsSetup">
            <summary>
            Gets or sets 缓存 设置项.
            </summary>
        </member>
        <member name="P:Aspire.AspireSetupOptions.IdentityOptionsSetup">
            <summary>
            Gets or sets 身份 设置项.
            </summary>
        </member>
        <member name="T:Aspire.AspireUseConfigure">
            <summary>
            Aspire 配置项.
            </summary>
        </member>
        <member name="P:Aspire.AspireUseConfigure.SwaggerUiName">
            <summary>
            Gets or sets Swagger UI 名称.
            </summary>
        </member>
        <member name="P:Aspire.AspireUseConfigure.EndpointRouteConfigure">
            <summary>
            Gets or sets 终节点路由配置.
            </summary>
        </member>
        <member name="P:Aspire.AspireUseConfigure.LoggerConfigure">
            <summary>
            Gets or sets Logger Configure.
            </summary>
        </member>
        <member name="T:Aspire.CodeUtility">
            <summary>
            编码工具.
            </summary>
        </member>
        <member name="M:Aspire.CodeUtility.EncodingToBase64(System.String)">
            <summary>
            编码到Base64.
            </summary>
            <param name="plainText">Plain Text.</param>
            <returns>Cipher Text.</returns>
        </member>
        <member name="T:Aspire.ConversionTypeUtility">
            <summary>
            转换 类型.
            </summary>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.SerializeObject(System.Object)">
            <summary>
            序列化 对象.
            </summary>
            <param name="source">Source Object.</param>
            <returns>Json.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.SerializeObjectAsync``1(System.Threading.Tasks.Task{``0})">
            <summary>
            序列化异步任务的结果.
            </summary>
            <typeparam name="T">Object Type.</typeparam>
            <param name="source">Source Object.</param>
            <returns>Json.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.DeserializeObject(System.String)">
            <summary>
            序列化 对象.
            </summary>
            <param name="source">Source Json.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.DeserializeObject``1(System.String)">
            <summary>
            序列化 对象.
            </summary>
            <typeparam name="T">Object Type.</typeparam>
            <param name="source">Source Json.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.DeserializeObjectAsync(System.Threading.Tasks.Task{System.String})">
            <summary>
            序列化异步任务的结果.
            </summary>
            <param name="source">Source Json.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.DeserializeObjectAsync``1(System.Threading.Tasks.Task{System.String})">
            <summary>
            序列化异步任务的结果.
            </summary>
            <typeparam name="T">Object Type.</typeparam>
            <param name="source">Source Json.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.TryToDouble(System.String,System.Double)">
            <summary>
            Try To Double.
            </summary>
            <param name="source">Source.</param>
            <param name="def">Default.</param>
            <returns>Double.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.ToTimestampMillisecond(System.DateTime)">
            <summary>
            To Timestamp Millisecond.
            </summary>
            <param name="time">Date Time.</param>
            <returns>Timestamp Millisecond.</returns>
        </member>
        <member name="M:Aspire.ConversionTypeUtility.ToDateTimeByTimestampMillisecond(System.Int64)">
            <summary>
            To Timestamp Millisecond.
            </summary>
            <param name="timestamp">Timestamp.</param>
            <returns>Date Time.</returns>
        </member>
        <member name="T:Aspire.EncryptionUtility">
            <summary>
            加密工具.
            </summary>
        </member>
        <member name="T:Aspire.EnumUtility">
            <summary>
            Enum Utility.
            </summary>
        </member>
        <member name="M:Aspire.EnumUtility.GetDescription``1(``0)">
            <summary>
            Get Description.
            </summary>
            <typeparam name="T">Some Enum.</typeparam>
            <param name="enumValue">Enum Value.</param>
            <returns>Description.</returns>
        </member>
        <member name="T:Aspire.GuidUtility">
            <summary>
            GUID 工具.
            </summary>
        </member>
        <member name="M:Aspire.GuidUtility.NewOrderlyGuid(Aspire.SequentialGuidType)">
            <summary>
            创建新的有序GUID.
            <para>This code is taken from jhtodd/SequentialGuid https://github.com/jhtodd/SequentialGuid/blob/master/SequentialGuid/Classes/SequentialGuid.cs.</para>
            </summary>
            <param name="guidType">Sequential Guid Type.</param>
            <returns>GUID.</returns>
        </member>
        <member name="T:Aspire.LinqUtility">
            <summary>
            Linq 工具.
            </summary>
        </member>
        <member name="M:Aspire.LinqUtility.ForEach``1(``0[],System.Action{``0})">
            <summary>
            迭代 Array.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="array">array.</param>
            <param name="action">action.</param>
        </member>
        <member name="M:Aspire.LinqUtility.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            迭代 IEnumerable.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="array">array.</param>
            <param name="action">action.</param>
        </member>
        <member name="M:Aspire.LinqUtility.FirstOrDefaultAsync``1(System.Threading.Tasks.Task{``0[]},System.Func{``0,System.Boolean})">
            <summary>
            第一个或者默认.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="sourceAsync">Source Async.</param>
            <param name="predicate">Predicate.</param>
            <returns>Task T.</returns>
        </member>
        <member name="M:Aspire.LinqUtility.FirstOrDefaultAsync``1(System.Threading.Tasks.Task{System.Collections.Generic.List{``0}},System.Func{``0,System.Boolean})">
            <summary>
            第一个或者默认.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="sourceAsync">Source Async.</param>
            <param name="predicate">Predicate.</param>
            <returns>Task T.</returns>
        </member>
        <member name="M:Aspire.LinqUtility.ToArrayAsync``1(System.Threading.Tasks.Task{System.Collections.Generic.List{``0}})">
            <summary>
            To Array.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="sourceAsync">Source Async.</param>
            <returns>Task T.</returns>
        </member>
        <member name="M:Aspire.LinqUtility.Join(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Join.
            </summary>
            <param name="source">Source.</param>
            <param name="separator">Separator.</param>
            <returns>String.</returns>
        </member>
        <member name="T:Aspire.StringUtility">
            <summary>
            String Utility.
            </summary>
        </member>
        <member name="M:Aspire.StringUtility.IsNullOrWhiteSpace(System.String)">
            <summary>
            是 null 或 空字符串.
            </summary>
            <param name="str">字符串.</param>
            <returns>是否是空字符串.</returns>
        </member>
        <member name="M:Aspire.StringUtility.SubstringSafe(System.String,System.Int32)">
            <summary>
            安全的 Substring.
            </summary>
            <param name="str">string.</param>
            <param name="count">count.</param>
            <returns>Substring.</returns>
        </member>
        <member name="T:Aspire.TypeUtility">
            <summary>
            Type Utility.
            </summary>
        </member>
        <member name="T:Aspire.Mapper.IAspireMapper">
            <summary>
            Mapper.
            </summary>
        </member>
        <member name="M:Aspire.Mapper.IAspireMapper.MapTo``1(System.Object)">
            <summary>
            映射到.
            </summary>
            <typeparam name="TTarget">目标对象.</typeparam>
            <param name="source">源.</param>
            <returns>目标.</returns>
        </member>
        <member name="M:Aspire.Mapper.IAspireMapper.MapTo``2(``0)">
            <summary>
            映射到.
            </summary>
            <typeparam name="TSource">源对象.</typeparam>
            <typeparam name="TTarget">目标对象.</typeparam>
            <param name="source">源.</param>
            <returns>目标.</returns>
        </member>
        <member name="T:Aspire.Mapper.IAspireMapperOptionsSetup">
            <summary>
            Aspire Mapper 启动.
            </summary>
        </member>
        <member name="M:Aspire.Mapper.IAspireMapperOptionsSetup.AddAspireMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加 Aspire Mapper.
            <para>必须声明如何实现IAspireMapperStartup.</para>
            </summary>
            <param name="services">Service Collection.</param>
        </member>
        <member name="T:Aspire.Mapper.MapperProfileAttribute">
            <summary>
            映射器描述.
            </summary>
        </member>
        <member name="M:Aspire.Mapper.MapperProfileAttribute.#ctor(System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspire.Mapper.MapperProfileAttribute"/> class.
            </summary>
            <param name="type">映射类型.</param>
            <param name="isCanReverseMap">是否可以反转映射.</param>
        </member>
        <member name="P:Aspire.Mapper.MapperProfileAttribute.Type">
            <summary>
            Gets 映射类型.
            </summary>
        </member>
        <member name="P:Aspire.Mapper.MapperProfileAttribute.IsCanReverseMap">
            <summary>
            Gets a value indicating whether 是否可以反转映射.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.AspireStartupConfigure">
            <summary>
            aspire 启动.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.AspireStartupConfigure.UseAspire(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Aspire.AspireUseConfigure})">
            <summary>
            使用 aspire.
            </summary>
            <param name="app">Application Builder.</param>
            <param name="actionConfigure">请注意 [NotNull] 标识.</param>
            <returns>Application Builder .</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.AspireConfigureServices">
            <summary>
            aspire 启动.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AspireConfigureServices.AddAspire(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Panda.DynamicWebApi.DynamicWebApiOptions},System.Action{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions},Aspire.Mapper.IAspireMapperOptionsSetup,Aspire.IAuditRepositoryOptionsSetup,Aspire.Identities.IIdentityOptionsSetup,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Mvc.MvcNewtonsoftJsonOptions},Aspire.ICacheClientOptionsSetup,Aspire.Loggers.ILoggerOptionsSetup)">
            <summary>
            add aspire.
            </summary>
            <param name="services">Service Collection.</param>
            <param name="dynamicWebApiOptionsSetup">Dynamic Api OptionsSetup.</param>
            <param name="swaggerGenOptionsSetup">Swagger OptionsSetup.</param>
            <param name="mapperOptions">Mapper OptionsSetup.</param>
            <param name="auditRepositoryOptions">Audit Repository OptionsSetup.</param>
            <param name="identityOptionsSetup">Identity OptionsSetup.</param>
            <param name="configuration">Configuration.</param>
            <param name="newtonsoftJsonOptionsSetup">NewtonsoftJson OptionsSetup.</param>
            <param name="cacheClientOptionsSetup">Cache Client OptionsSetup.</param>
            <param name="loggerOptionsSetup">Logger OptionsSetup.</param>
            <returns>Service Collection .</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AspireConfigureServices.AddAspire(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Aspire.AspireSetupOptions})">
            <summary>
            add aspire.
            </summary>
            <param name="services">Service Collection.</param>
            <param name="setupAction">Setup Action.</param>
            <exception cref="T:System.ArgumentNullException">请注意 [NotNull] 标识.</exception>
            <returns>Service Collection .</returns>
        </member>
    </members>
</doc>
